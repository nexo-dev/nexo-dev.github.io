<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About me on </title>
    <link>/</link>
    <description>Recent content in About me on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to compare Go slices?</title>
      <link>/articles/2022-02-11-go-slices/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/articles/2022-02-11-go-slices/</guid>
      <description>Problem: You have two slices that potentially share same memory buffer meaning that appending to one can cause changes in another one. So how to understand if two slices are actually share memory?
Let&amp;rsquo;s imagine we have a functions like:
func IsMemoryShared(a, b []int) bool { ... }  And we want to preserve following behaviour:
a := []{1, 2, 3} b := []{1, 2, 3} IsMemoryShared(a, a) // true IsMemoryShared(a[:2]) // true IsMemoryShared(a, b) // false IsMemoryShared(a[1:0], b[1:0]) // false  It is known that slice in Go backed by a struct that contain a pointer to some place in memory where slice data is stored and two integers - length and capacity of the slice.</description>
    </item>
    
    <item>
      <title>How to open window in MacOS programmatically using Swift</title>
      <link>/articles/2019-04-27-swift/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/articles/2019-04-27-swift/</guid>
      <description>Once I face a problem - &amp;ldquo;How can I create a normal window on Mac OS?&amp;rdquo;. Definitely it is possible to use XCode, generate new project using very modern tools and start writing events handling functions/callbacks/delegates/etc. But what if I want to do everything using code, for example last available version of Swift. And here I faced a problem cause there are no normal step-by-step guides which will explain how to do it.</description>
    </item>
    
    <item>
      <title>Initial Commit</title>
      <link>/articles/2019-03-10-initial-commit/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/articles/2019-03-10-initial-commit/</guid>
      <description>So, I want to Welcome everybody who at any circumstances get to this page.
Recently I decided that it will be great at least to save some random things that I found interesting but also try to share it cause I strongly believe that if something become interesting to one person then this person is not alone and there is non zero probability that there is somebody else who can be interested in it.</description>
    </item>
    
  </channel>
</rss>
